#
# Default Bacula Director Configuration file
#  For Bacula release 5.2.13 (19 February 2013) -- unknown unknown
#

Director {                            # define myself
  Name = bacula-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/etc/bacula/query.sql"
  WorkingDirectory = "/var/spool/bacula"
  PidDirectory = "/var/run"
  Maximum Concurrent Jobs = 1
  Password = "@@DIR_PASSWORD@@"         # Console password
  Messages = Daemon
}

JobDefs {
  Name = "DefaultJob"
  FileSet = "linux etc configs"
  Type = Backup
  Storage = File
  Messages = Standard
  Pool = File
  Priority = 10
}

Job {
  Name = "Backup configs incremental server 1"
  JobDefs = "DefaultJob"
  Schedule = "Incremental Every 10 Minutes"
  Client = client1-fd
  Write Bootstrap = "/var/spool/bacula/%c1.bsr"
}

Job {
  Name = "Backup configs incremental server 2"
  JobDefs = "DefaultJob"
  Schedule = "Incremental Every 10 Minutes"
  Client = client2-fd
  Write Bootstrap = "/var/spool/bacula/%c2.bsr"
}

Job {
  Name = "Backup configs differential server 1"
  JobDefs = "DefaultJob"
  Schedule = "Differential Every 30 Munites"
  Client = client1-fd
  Write Bootstrap = "/var/spool/bacula/%c1.bsr"
}

Job {
  Name = "Backup configs differential server 2"
  JobDefs = "DefaultJob"
  Schedule = "Differential Every 30 Munites"
  Client = client2-fd
  Write Bootstrap = "/var/spool/bacula/%c2.bsr"
}

Job {
  Name = "Backup configs full server 1"
  JobDefs = "DefaultJob"
  Schedule = "Daily Full"
  Client = client1-fd
  Write Bootstrap = "/var/spool/bacula/%c1.bsr"
}

Job {
  Name = "Backup configs full server 2"
  JobDefs = "DefaultJob"
  Schedule = "Daily Full"
  Client = client2-fd
  Write Bootstrap = "/var/spool/bacula/%c2.bsr"
}

FileSet {
  Name = "linux etc configs"
  Include {
    Options {
      signature = MD5
    }
    File = /etc
  }
}

Schedule {
  Name = "Incremental Every 10 Minutes"
  Run = Incremental hourly at 0:01
  Run = Incremental hourly at 0:11
  Run = Incremental hourly at 0:21
  Run = Incremental hourly at 0:31
  Run = Incremental hourly at 0:41
  Run = Incremental hourly at 0:51
}

Schedule {
  Name = "Differential Every 30 Munites"
  Run = Differential hourly at 0:05
  Run = Differential hourly at 0:35
}

Schedule {
  Name = "Daily Full"
  Run = Full daily at 2:00
}

Client {
  Name = client1-fd
  Address = 192.168.111.11
  FDPort = 9102
  Catalog = MyCatalog
  Password = "@@FD_PASSWORD@@"          # password for FileDaemon
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

Client {
  Name = client2-fd
  Address = 192.168.111.12
  FDPort = 9102
  Catalog = MyCatalog
  Password = "@@FD_PASSWORD@@"          # password for FileDaemon
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

# Definition of file storage device
Storage {
  Name = File
  Address = 192.168.111.10                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "@@SD_PASSWORD@@"
  Device = FileStorage
  Media Type = File
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula"; dbuser = "bacula"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
  syslog = all, !skipped, !saved
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/log/bacula/bacula.log" = all, !skipped
  catalog = all
}

#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  syslog = all, !skipped, !saved
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  LabelFormat = "vol-"
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = bacula-mon
  Password = "@@MON_DIR_PASSWORD@@"
  CommandACL = status, .status
}